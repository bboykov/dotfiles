# vi:syntax=sh
# ~/.bashrc: executed by bash(1) for non-login shells.
# To understand the shell init file setup in details read:
# https://superuser.com/questions/183870/difference-between-bashrc-and-bash-profile
# https://www.tecmint.com/understanding-shell-initialization-files-and-user-profiles-linux/

# If not running interactively, don't do anything
case $- in
  *i*) ;;
  *) return ;;
esac

# Update window size after every command
shopt -s checkwinsize

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob

# Perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# Treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# Perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# Treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# Display matches for ambiguous patterns at first tab press
bind "set show-all-if-ambiguous on"

# Immediately add a trailing slash when autocompleting symlinks to directories
bind "set mark-symlinked-directories on"

# Append to the history file, don't overwrite it
shopt -s histappend

# Save multi-line commands as one command
shopt -s cmdhist

# Record each line as it gets issued
PROMPT_COMMAND='history -a'

# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000

# Avoid duplicate entries
HISTCONTROL="erasedups:ignoreboth"

# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"

# Use standard ISO 8601 timestamp
# %F equivalent to %Y-%m-%d
# %T equivalent to %H:%M:%S (24-hours format)
HISTTIMEFORMAT='%F %T '

# This defines where cd looks for targets Add the directories you want to have fast access to,
# separated by colon Ex: CDPATH=".:~:~/projects" will look for targets in the current working
# directory, in home and in the ~/projects folder
CDPATH=".:~/wd"

# This allows you to bookmark your favorite places across the file system Define a variable
# containing a path and you will be able to cd into it regardless of the directory you're in
shopt -s cdable_vars

export dotfiles="$HOME/dotfiles"
export notes="$HOME/drive/notes/$(date +%Y)"
export wd="$HOME/wd"

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin"  ] ; then
  PATH="$HOME/bin:$PATH"
fi

export __DOTFILES_HOME="${HOME}/dotfiles"
if [[ -f "${__DOTFILES_HOME}/lib/functions.bash" ]]; then
  source "${__DOTFILES_HOME}/lib/functions.bash"

  export __DOTFILES_OS_PLATFORM=$(util::detect_platform)
else
  echo "[ERROR] dotfiles is not found at ${__DOTFILES_HOME}. Abort."
  exit 0
fi

# Load alias definitions
if [[ -f $HOME/.bash_aliases ]]; then
  source "$HOME/.bash_aliases"
fi

# Load custom functions
if [[ -f $HOME/.bash_functions.bash ]]; then
  source "$HOME/.bash_functions.bash"
fi

# Load liquidprompt
if [ -f "$HOME/liquidprompt/liquidprompt" ]; then
  source "$HOME/liquidprompt/liquidprompt"
fi

# Load base16 shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        source "$BASE16_SHELL/profile_helper.sh"

base16_monokai

# Load OS specific configuration
if [[ "$OSTYPE" == "darwin"* ]]; then
  source "$HOME/.bashrc_macos"
elif [[ "$OSTYPE" == "linux-gnu" ]]; then
  source "$HOME/.bashrc_linux"
fi

### Load todo-txt configuration file
### This assumes the network drive is mounted
export TODOTXT_CFG_FILE="$HOME/dotfiles/config/todo.cfg"


# Load local configuration
if [ -n "$BASH" ] && [ -r "$HOME/.bashrc_local" ]; then
  source "$HOME/.bashrc_local"
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

if gpg -k D6216BC60F893846900CC372BEBE631857194F24 >/dev/null 2>&1 ;then
  export GPG_TTY=$(tty)
  export GPGKEY="D6216BC60F893846900CC372BEBE631857194F24"
fi


# Load pyenv automatically
export PYENV_ROOT="$HOME/.pyenv"
if [[ -d "${PYENV_ROOT}" ]] ; then
  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

